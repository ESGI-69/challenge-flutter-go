name: Deploy Go
run-name: ${{ github.actor }} deployed Go (${{ github.sha }})

concurrency: deploy-go

on:
  push:
    branches: [ "main" ]
    paths: 
      - 'go/**'
      - 'move_together_app/**'
      - '.github/workflows/deploy_go.yaml'

env:
  DOCKERHUB_REPO: ${{ vars.DOCKERHUB_USERNAME }}/challenge-flutter-go-backend

jobs:
  flutter-build-web:
    defaults:
      run:
        working-directory: move_together_app
    name: Flutter Build Web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
        cache-key: "flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}"
        pub-cache-key: "flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}"
    - name: Copy .env file
      run: cp .env.release .env
    - name: Retrive dependencies
      run: flutter pub get
    - name: Build Web
      run: flutter build web --release --base-href /backoffice/
    - name: Save web build to artifact
      uses: actions/upload-artifact@v4
      with:
        path: move_together_app/build/web
        name: backoffice-deploy
        if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    name: Publish image on Docker Hub
    needs: flutter-build-web
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Retrive artifact
        uses: actions/download-artifact@v4
        with:
          name: backoffice-deploy
          path: go/backoffice
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "./go"
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.DOCKERHUB_REPO }}:latest, ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs:
      - publish
    environment:
      name: production
      url: ${{ vars.URL }}
    concurrency: deploy
    steps:
      - uses: actions/checkout@v3
      - name: Set up kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
      - name: Redeploy
        run: |
          kubectl set image deployment/challenge-flutter-go-backend-deployment challenge-flutter-go-backend-deployment=${{ env.DOCKERHUB_REPO }}:${{ github.sha }} -n challenge-flutter-go
          kubectl rollout status deployment/challenge-flutter-go-backend-deployment -n challenge-flutter-go
